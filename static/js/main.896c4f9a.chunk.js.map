{"version":3,"sources":["view/components/HeaderMenu/HeaderMenu.js","view/components/Header/Header.js","view/components/Footer/Footer.js","view/Posts/PostList/PostItem.js","view/Posts/PostList/PostList.js","models/Post.js","shared/constants.js","services/PostService.js","view/Posts/PostsPage.js","view/Authors/AuthorsList/AuthorsList.js","models/Address.js","models/Company.js","models/Author.js","services/AuthorService.js","view/Authors/AuthorsPage.js","view/About/About.js","view/Posts/SinglePost/PostAuthor.js","view/Posts/SinglePost/RelatedPosts.js","view/Posts/SinglePostPage.js","view/Authors/SingleAuthor/AuthorInfo.js","view/Authors/SingleAuthor/AuthorAddress.js","view/Authors/SingleAuthor/AuthorCompany.js","view/Authors/SingleAuthorPage.js","view/Posts/CreatePostPage.js","view/components/Main/Main.js","view/App.js","index.js"],"names":["HeaderMenu","react_default","a","createElement","className","react_router_dom","to","Header","HeaderMenu_HeaderMenu","Footer","PostItem","_ref","postId","authorId","body","title","concat","slice","PostList","posts","map","_ref2","PostItem_PostItem","key","Post","id","userId","Object","classCallCheck","this","API_ENDPOINT","postService","fetchPosts","POSTS_API","fetch","then","response","json","post","fetchSinglePost","POST_API","fetchAuthorRelatedPost","RELATED_POSTS_API","reduce","acc","obj","push","relatedPosts","postData","data","method","JSON","stringify","PostsPage","props","_this","possibleConstructorReturn","getPrototypeOf","call","listOfPosts","setState","state","Fragment","src","alt","PostList_PostList","Component","AuthorsList","authors","author","name","Address","street","city","zipcode","geo","Company","catchPhrase","Author","username","email","address","phone","company","authorService","fetchAuthors","AUTHORS_API","fetchSingleAuthor","SINGLE_AUTHOR_API","AuthorsPage","listOfAuthors","AuthorsList_AuthorsList","About","PostAuthor","fetchAuthor","console","log","RelatedPosts","_this$props","listOfRelatedPosts","filter","prevProps","index","SinglePostPage","fetchPost","match","params","url","_this$state$post","PostAuthor_PostAuthor","RelatedPosts_RelatedPosts","AuthorInfo","AuthorAddress","lat","lng","width","height","scrolling","marginHeight","marginWidth","frameBorder","style","border","AuthorCompany","SingleAuthorPage","singleAuthor","_this$state$author","_this$state$author$ad","_this$state$author$ad2","AuthorInfo_AuthorInfo","AuthorAddress_AuthorAddress","AuthorCompany_AuthorCompany","CreatePostPage","onInputChange","event","preventDefault","_event$target","target","value","trim","onSubmitForm","_this$state","history","onCancelForm","type","placeholder","onChange","cols","rows","onClick","Main","react_router","exact","path","component","App","Header_Header","Main_Main","Footer_Footer","ReactDOM","render","src_view_App","document","getElementById"],"mappings":"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","file":"static/js/main.896c4f9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderMenu = () => {\r\n    return (\r\n        <nav className='header-menu'>\r\n            <ul>\r\n                <li><Link to='/bit-blog'>Home</Link> </li>\r\n                <li><Link to='/bit-blog/authors'>Authors</Link></li>\r\n                <li><Link to='/bit-blog/about'>About</Link></li>\r\n                <li><Link to='/bit-blog/posts/new'>CreatePost</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport { HeaderMenu }","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { HeaderMenu } from '../HeaderMenu/HeaderMenu';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className='container flex-row'>\r\n                <Link to='/bit-blog'><h1>BLOG</h1></Link>\r\n                <HeaderMenu />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport { Header }","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"container flex-row\">\r\n                Copyright 2019\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport { Footer } ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostItem = ({ postId, authorId, body, title }) => {\r\n    return (\r\n        <li>\r\n            <Link to={`/bit-blog/posts/${authorId}/${postId}`}><h3>{title}</h3></Link>\r\n            <div>{body.slice(0, 70) + '...'}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport { PostItem }","import React from 'react'\r\nimport { PostItem } from './PostItem'\r\n\r\nconst PostList = ({ posts }) => {\r\n    return (\r\n        <ul className=\"post-list\">\r\n            {posts.map(({ postId, authorId, title, body }) =>\r\n                <PostItem\r\n                    key={postId}\r\n                    postId={postId}\r\n                    authorId={authorId}\r\n                    title={title}\r\n                    body={body}\r\n                />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport { PostList }","class Post {\r\n    constructor({ id, userId, title, body }) {\r\n        this.postId = id;\r\n        this.authorId = userId;\r\n        this.title = title;\r\n        this.body = body;\r\n    }\r\n}\r\n\r\nexport default Post;","export const API_ENDPOINT = 'https://jsonplaceholder.typicode.com';","import Post from '../models/Post';\r\nimport { API_ENDPOINT } from '../shared/constants';\r\n\r\nclass PostService {\r\n\r\n    fetchPosts = () => {\r\n        const POSTS_API = `${API_ENDPOINT}/posts`;\r\n\r\n        return fetch(POSTS_API)\r\n            .then(response => response.json())\r\n            .then(posts => posts.map(post => new Post(post)))\r\n    }\r\n\r\n    fetchSinglePost = (postId) => {\r\n        const POST_API = `${API_ENDPOINT}/posts/${postId}`;\r\n\r\n        return fetch(POST_API)\r\n            .then(response => response.json())\r\n            .then(post => new Post(post))\r\n    }\r\n\r\n    fetchAuthorRelatedPost = (userId) => {\r\n        const RELATED_POSTS_API = `${API_ENDPOINT}/users/${userId}/posts`;\r\n\r\n        return fetch(RELATED_POSTS_API)\r\n            .then(response => response.json())\r\n            .then(posts => {\r\n                return posts.reduce((acc, obj) => {\r\n                    if (obj.userId === userId) acc.push(obj);\r\n                    return acc;\r\n                }, [])\r\n            })\r\n            .then(relatedPosts => relatedPosts.map(post => new Post(post)))\r\n            .then(posts => posts.slice(0, 10))\r\n\r\n    }\r\n\r\n    postData = (data) => {\r\n        const POSTS_API = `${API_ENDPOINT}/posts`;\r\n\r\n        return fetch(POSTS_API, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const postService = new PostService();\r\n","import React, { Component } from 'react'\r\nimport { PostList } from './PostList/PostList'\r\nimport { postService } from '../../services/PostService';\r\nimport './PostsPage.css'\r\n\r\nclass PostsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n        }\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        postService.fetchPosts()\r\n            .then(listOfPosts => this.setState({\r\n                posts: listOfPosts,\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <img src=\"img/anitaEkb.jpg\" alt=\"Actress Anita Ekberg\" />\r\n                <PostList posts={this.state.posts} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { PostsPage }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthorsList = ({ authors }) => {\r\n    return (\r\n        <ul className=\"authors-list\">\r\n            {authors.map(author => <li><Link to={`/bit-blog/authors/${author.authorId}`}>{author.name}</Link></li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport { AuthorsList }","class Address {\r\n    constructor({ street, city, zipcode, geo }) {\r\n        this.street = street;\r\n        this.city = city;\r\n        this.zipcode = zipcode;\r\n        this.geo = geo;\r\n    }\r\n}\r\n\r\nexport default Address\r\n\r\n","class Company {\r\n    constructor({ name, catchPhrase }) {\r\n        this.name = name;\r\n        this.catchPhrase = catchPhrase\r\n    }\r\n}\r\n\r\nexport default Company\r\n\r\n\r\n","import Address from './Address'\r\nimport Company from './Company'\r\n\r\nclass Author {\r\n    constructor({ id, name, username, email, address, phone, company }) {\r\n        this.authorId = id;\r\n        this.name = name;\r\n        this.username = username;\r\n        this.email = email;\r\n        this.address = new Address(address);\r\n        this.phone = phone;\r\n        this.company = new Company(company);\r\n    }\r\n}\r\n\r\nexport default Author\r\n\r\n","import Author from '../models/Author';\r\nimport { API_ENDPOINT } from '../shared/constants';\r\n\r\nclass AuthorService {\r\n\r\n    fetchAuthors = () => {\r\n        const AUTHORS_API = `${API_ENDPOINT}/users`;\r\n\r\n        return fetch(AUTHORS_API)\r\n            .then(response => response.json())\r\n            .then(data => data.map(author => new Author(author)))\r\n    }\r\n\r\n    fetchSingleAuthor = (userId) => {\r\n        const SINGLE_AUTHOR_API = `${API_ENDPOINT}/users/${userId}`;\r\n\r\n        return fetch(SINGLE_AUTHOR_API)\r\n            .then(response => response.json())\r\n            .then(author => new Author(author))\r\n\r\n    }\r\n}\r\n\r\nexport const authorService = new AuthorService();\r\n","import React, { Component } from 'react';\r\nimport { AuthorsList } from './AuthorsList/AuthorsList';\r\nimport { authorService } from '../../services/AuthorService'\r\nimport './AuthorsPage.css';\r\n\r\n\r\nclass AuthorsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authors: [],\r\n        }\r\n    }\r\n\r\n    fetchAuthors = () => {\r\n        authorService.fetchAuthors()\r\n            .then(listOfAuthors => this.setState({\r\n                authors: listOfAuthors,\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchAuthors();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthorsList authors={this.state.authors} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { AuthorsPage }","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <h2>About</h2>\r\n                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Veritatis totam excepturi nostrum nesciunt molestiae dignissimos fugit illo commodi fugiat ullam repellat architecto optio repudiandae ipsum mollitia nobis odit, dicta dolorem quisquam natus quae id dolore voluptatibus? Sed adipisci, officiis distinctio, neque dolorem nobis quis eveniet facilis iure quasi voluptas. Debitis dolorum at minus rerum sequi, facilis maxime nobis. Cupiditate dolorum obcaecati saepe suscipit voluptates magni voluptas quam est non blanditiis eius, sunt iste. Error assumenda quaerat in ipsum inventore sit quam cumque similique, eveniet corporis veritatis ad cum nemo repudiandae possimus pariatur, quis eius nam. Fuga ipsum voluptatem fugit quia sunt numquam commodi ad quidem repellendus? Placeat, eligendi! Doloribus, mollitia perferendis! Nemo temporibus blanditiis consectetur aliquam maxime minima voluptatem libero incidunt velit, nostrum similique aliquid consequuntur esse harum odio laborum distinctio dolorum animi voluptate iste ipsa? Non unde labore enim repellendus suscipit ex sapiente. Voluptatibus cumque sapiente minus. Mollitia, quas.</p>\r\n            </div>\r\n            <div>\r\n                <h2>Our Story</h2>\r\n                <p>Cupiditate dolorum obcaecati saepe suscipit voluptates magni voluptas quam est non blanditiis eius, sunt iste. Error assumenda quaerat in ipsum inventore sit quam cumque similique, eveniet corporis veritatis ad cum nemo repudiandae possimus pariatur, quis eius nam. Fuga ipsum voluptatem fugit quia sunt numquam commodi ad quidem repellendus? Placeat, eligendi! Doloribus, mollitia perferendis! Nemo temporibus blanditiis consectetur aliquam maxime minima voluptatem libero incidunt velit.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { About }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { authorService } from '../../../services/AuthorService';\r\n\r\nclass PostAuthor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            author: null,\r\n        }\r\n    }\r\n\r\n    fetchAuthor = () => {\r\n        const id = this.props.authorId;\r\n        console.log(id)\r\n        authorService.fetchSingleAuthor(id)\r\n            .then(author => this.setState({\r\n                author\r\n            }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchAuthor();\r\n    }\r\n\r\n    render() {\r\n        const { author } = this.state;\r\n\r\n        if (!author) {\r\n            return (\r\n                <div>...</div>\r\n            )\r\n        }\r\n\r\n        const { name, authorId } = author;\r\n\r\n\r\n        return (\r\n            <Link to={`/bit-blog/authors/${authorId}`}><h3>{name}</h3></Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport { PostAuthor }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { postService } from '../../../services/PostService'\r\n\r\nclass RelatedPosts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: null\r\n        }\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        const { authorId, postId } = this.props;\r\n        postService.fetchAuthorRelatedPost(authorId)\r\n            .then(listOfRelatedPosts => this.setState({\r\n                posts: listOfRelatedPosts.filter(post => post.postId !== postId)\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props !== prevProps) {\r\n            this.fetchPosts();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { posts } = this.state;\r\n\r\n        if (!posts) {\r\n            return (\r\n                <article className=\"related-posts\">\r\n                    <h2>No other posts from this author</h2>\r\n                </article>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <article className=\"related-posts\">\r\n                <h2> more posts from same author</h2>\r\n                <ul>\r\n                    {posts.map(({ title, body, authorId, postId }, index) => <li key={index}>\r\n                        <Link to={`/bit-blog/posts/${authorId}/${postId}`}><span className=\"bold\">{title.slice(0, 15)}</span> - {body.slice(0, 70)}</Link>\r\n                    </li>)}\r\n\r\n                </ul>\r\n            </article>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport { RelatedPosts }","import React, { Component } from 'react';\r\nimport { PostAuthor } from './SinglePost/PostAuthor';\r\nimport { RelatedPosts } from './SinglePost/RelatedPosts';\r\nimport { postService } from '../../services/PostService';\r\nimport './SinglePostPage.css';\r\n\r\n\r\nclass SinglePostPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: null,\r\n        }\r\n    }\r\n\r\n    fetchPost = () => {\r\n        const id = this.props.match.params.postId;\r\n        postService.fetchSinglePost(id)\r\n            .then(post => this.setState({\r\n                post\r\n            }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPost();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.match.url !== prevProps.match.url) {\r\n            this.fetchPost();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { post } = this.state;\r\n\r\n        if (!post) {\r\n            return (\r\n                <div>Loading...</div>\r\n            )\r\n        }\r\n\r\n        const { postId, authorId, title, body } = this.state.post;\r\n        // const { authorId } = this.props.match.params.authorId;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"single-post\">\r\n                    <div className=\"post-title\">\r\n                        <h1>{title}</h1>\r\n                        <PostAuthor authorId={authorId} />\r\n                    </div>\r\n                    <div className=\"post-body\">\r\n                        {body}\r\n                    </div>\r\n                </div>\r\n                <RelatedPosts authorId={authorId} postId={postId} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { SinglePostPage }","import React from 'react'\r\n\r\nconst AuthorInfo = ({ name, username, email, phone }) => {\r\n    return (\r\n        <article className=\"author-info flex-row\">\r\n            <div className=\"author-image\">\r\n                <img src=\"https://avatars1.githubusercontent.com/u/6689528?s=180&v=4\" alt=\"user\" />\r\n            </div>\r\n            <div className=\"author-info-body\">\r\n                <h2>{name}</h2>\r\n                <div>{username}</div>\r\n                <div>{email}</div>\r\n                <div>{phone}</div>\r\n            </div>\r\n        </article>\r\n\r\n    )\r\n}\r\n\r\nexport { AuthorInfo }","import React from 'react'\r\n\r\nconst AuthorAddress = ({ street, city, zipcode, lat, lng }) => {\r\n    return (\r\n        <article className=\"author-address flex-row\">\r\n            <div className=\"address-info\">\r\n                <h2>Address</h2>\r\n                <div>{street}</div>\r\n                <div>{city}</div>\r\n                <div>{zipcode}</div>\r\n            </div>\r\n            <div className=\"author-address-iframe\">\r\n                <iframe\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    scrolling=\"no\"\r\n                    marginHeight=\"0\"\r\n                    marginWidth=\"0\"\r\n                    title={street}\r\n                    frameBorder=\"0\"\r\n                    style={{ border: 0 }}\r\n                    src={`https://maps.google.com/maps?q=${lat},${lng}&z=15&output=embed`}\r\n                />\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport { AuthorAddress }","import React from 'react'\r\n\r\nconst AuthorCompany = ({ name, catchPhrase }) => {\r\n    return (\r\n        <article className=\"author-company\">\r\n            <div>\r\n                <h2>Company</h2>\r\n                <div>{name}</div>\r\n                <div>{catchPhrase}</div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport { AuthorCompany }","import React, { Component } from 'react'\r\nimport { AuthorInfo } from './SingleAuthor/AuthorInfo'\r\nimport { AuthorAddress } from './SingleAuthor/AuthorAddress'\r\nimport { AuthorCompany } from './SingleAuthor/AuthorCompany'\r\nimport { Link } from 'react-router-dom'\r\nimport { authorService } from '../../services/AuthorService'\r\nimport './SingleAuthorPage.css';\r\n\r\n\r\nclass SingleAuthorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            author: null,\r\n        }\r\n    }\r\n\r\n    fetchSingleAuthor = () => {\r\n        const id = this.props.match.params.authorId;\r\n        authorService.fetchSingleAuthor(id)\r\n            .then(singleAuthor => this.setState({\r\n                author: singleAuthor,\r\n            }))\r\n    }\r\n    componentDidMount() {\r\n        this.fetchSingleAuthor();\r\n    }\r\n    render() {\r\n        if (this.state.author) {\r\n\r\n            const { name, username, email, phone, address: { street,\r\n                city, zipcode, geo: { lat, lng } }, company } = this.state.author;\r\n\r\n            return (\r\n                <>\r\n                    <nav className=\"back\">\r\n                        <Link to='/bit-blog'>Back</Link>\r\n                    </nav>\r\n                    <AuthorInfo\r\n                        name={name}\r\n                        username={username}\r\n                        email={email}\r\n                        phone={phone}\r\n                    />\r\n                    <AuthorAddress\r\n                        street={street}\r\n                        city={city}\r\n                        zipcode={zipcode}\r\n                        lat={lat}\r\n                        lng={lng}\r\n\r\n                    />\r\n                    <AuthorCompany\r\n                        name={company.name}\r\n                        catchPhrase={company.catchPhrase}\r\n                    />\r\n                </>\r\n            )\r\n\r\n        } else {\r\n\r\n            return (\r\n                <div>Loading...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport { SingleAuthorPage }","import React, { Component } from 'react';\r\nimport { postService } from '../../services/PostService'\r\nimport './CreatePostPage.css';\r\n\r\nclass CreatePostPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: null,\r\n            body: null,\r\n        }\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { name, value } = event.target;\r\n        // this.setState({\r\n        //     [name]: value.trim(),\r\n        // })\r\n\r\n        if (name === 'title') this.setState({ title: value.trim() });\r\n        else this.setState({ body: value.trim() })\r\n    }\r\n\r\n    onSubmitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        const userId = 1;\r\n        // const { ...data } = this.state\r\n\r\n        const { title, body } = this.state;\r\n        postService.postData({\r\n            title: title,\r\n            body: body,\r\n            userId: userId,\r\n        })\r\n            .then(response => {\r\n                this.props.history.push('/bit-blog');\r\n            });\r\n\r\n    }\r\n\r\n    onCancelForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.history.push('/bit-blog');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className='new-post-main-title'>New Post</h1>\r\n                <form>\r\n                    <div className='new-post-title'>\r\n                        <h2>Title</h2>\r\n                        <input type=\"text\" name=\"title\" placeholder=\"Enter Post Title\" onChange={this.onInputChange} />\r\n                    </div>\r\n\r\n                    <div className='new-post-body'>\r\n                        <h2>Content</h2>\r\n                        <textarea name=\"body\" cols=\"60\" rows=\"10\" placeholder=\"Post Content\" onChange={this.onInputChange} />\r\n                    </div>\r\n\r\n                    <div className='form-buttons'>\r\n                        <input type=\"button\" value=\"Cancel\" onClick={this.onCancelForm} />\r\n                        <input type=\"submit\" onClick={this.onSubmitForm} />\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { CreatePostPage }\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { PostsPage } from '../../Posts/PostsPage';\r\nimport { AuthorsPage } from '../../Authors/AuthorsPage';\r\nimport { About } from '../../About/About';\r\nimport { SinglePostPage } from '../../Posts/SinglePostPage';\r\nimport { SingleAuthorPage } from '../../Authors/SingleAuthorPage';\r\nimport { CreatePostPage } from '../../Posts/CreatePostPage'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className='container'>\r\n            <Switch>\r\n                <Route exact path=\"/bit-blog/posts/:authorId/:postId\" component={SinglePostPage} />\r\n                <Route path=\"/bit-blog/posts/new\" component={CreatePostPage} />\r\n                <Route path=\"/bit-blog/authors/:authorId\" component={SingleAuthorPage} />\r\n                <Route path=\"/bit-blog/authors\" component={AuthorsPage} />\r\n                <Route path=\"/bit-blog/about\" component={About} />\r\n                <Route path=\"/bit-blog\" component={PostsPage} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport { Main }","import React from 'react';\r\nimport { Header } from './components/Header/Header';\r\nimport { Footer } from './components/Footer/Footer';\r\nimport { Main } from './components/Main/Main';\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './view/App';\n\n\nReactDOM.render(\n    <BrowserRouter >\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}